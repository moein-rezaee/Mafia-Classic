@font-face {
  font-family: "khandevane";
  src: url(/fonts/khandevane/Khandevane__p30download.com.ttf);
}

@font-face {
  font-family: "Vazir";
  src: url(/fonts/vazir-font-v16.1.0/Farsi-Digits-Without-Latin/Vazir-Bold-FD-WOL.woff);
}

@font-face {
  font-family: "IranSans";
  src: url(/fonts/A-Iranian-Sans/Iranian\ Sans.ttf);
}

:root {
  --backgroundDefault: #ffff;
  --Warning: #ff3333;
  --txtDefaultColor: #ffff;
  --textColor: #000000;
  --secondText: #7a7a7a;
  --fourthText: #ff33c2;
  --thirdText: #338bff;
  --pending: #e9e9e9;
  --border: #d0c6c6;
  --boxShadow: 2px 2px 2px 1px rgba(0, 0, 0, 10%);
  --titleFont: "khandevane";
  --txtFont: "Vazir";
  --titleSize: 15pt;
  --Transition: all 0.3 ease-in;
  /* grdSection */
  --grdSecondWarning: linear-gradient(0deg,
      rgba(0, 0, 0, 1) 0%,
      rgba(104, 21, 21, 1) 0%,
      rgba(225, 45, 45, 1) 86%,
      rgba(225, 45, 45, 1) 100%,
      rgba(0, 0, 0, 1) 100%);

  --grdAccept: linear-gradient(360deg,
      rgba(39, 28, 227, 0) 0%,
      rgba(137, 255, 124, 1) 100%);

  --grdSecondAccept: linear-gradient(180deg, #fff, rgb(73 242 54 / 94%) 100%);

  --grdSelect: linear-gradient(180deg,
      rgba(95, 248, 67, 1) -13%,
      rgba(80, 223, 132, 1) 52%,
      rgb(54 178 244 / 85%) 122%);

  --grdUnselect: linear-gradient(180deg,
      rgba(255, 158, 51, 1) 0%,
      rgba(255, 91, 51, 1) 50%);

  --grdLightPurpule: linear-gradient(180deg,
      rgba(229, 51, 255, 1) 0%,
      rgba(167, 51, 255, 1) 100%);

  --grdLightPink: linear-gradient(90deg,
      rgba(2, 0, 36, 1) 0%,
      rgba(255, 51, 51, 1) 35%,
      rgba(0, 212, 255, 1) 100%);

  --grdCity: linear-gradient(180deg,
      rgba(39, 28, 227, 0) 0%,
      rgba(96, 164, 253, 1) 100%);

  --grdHardBlue: linear-gradient(180deg,
      rgba(0, 0, 0, 1) 0%,
      rgba(0, 0, 0, 1) 0%,
      rgba(45, 123, 225, 1) 0%,
      rgba(44, 123, 225, 1) 14.000000000000002%,
      rgba(20, 57, 103, 1) 79%);

  --ligthShadow: linear-gradient(360deg,
      rgba(39, 28, 227, 0) 0%,
      rgba(255, 255, 255, 0.648424) 100%);

  --grdLigthGray: linear-gradient(0deg,
      rgb(137 137 137 / 0%) 0%,
      rgb(215 215 215) 208%);

  --grdSecondDisabled: linear-gradient(180deg,
      rgba(39, 28, 227, 0) 0%,
      rgba(0, 0, 0, 0.7148109243697479) 100%);

  --grdChoose: linear-gradient(180deg,
      rgb(110 208 80) 0%,
      rgba(140, 255, 61, 1) 25%,
      rgb(190 255 73) 50%);

  --grdShadowText: linear-gradient(0deg,
      rgb(137 137 137 / 21%) 0%,
      rgb(215 215 215) 208%);

  --grdShadowTop: linear-gradient(to bottom, #0000001c, #0000);
  --grdDie: linear-gradient(to bottom, #00000000, #ff0000c4);
}

html,
body {
  display: flow-root;
  background-image: url(../images/main.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center bottom;
  background-attachment: fixed;
  height: 100%;
  width: 100%;
  overflow: hidden;
  margin: 0;
  padding: 0;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0px;
  font-weight: normal;
}

a,
a:hover {
  text-decoration: none;
}

img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  position: relative;
}

::-webkit-input-placeholder {
  font-family: var(--txtFont);
}

.container {
  display: flow-root;
  width: 100%;
  height: 100vh;
  max-width: 1280px;
  margin: 0 auto;
  box-sizing: border-box;
}

.hide {
  display: none !important;
}

.inputBox input[type="text"] {
  display: inline-block;
  width: 100%;
  vertical-align: top;
  border: 1px solid var(--border);
  text-align: right;
  padding: 8px 12px;
  border-radius: 8px;
  position: relative;
  box-sizing: border-box;
  z-index: 100;
  outline: none;
  font-size: 16pt;
  font-family: var(--txtFont);
}

/* checkMark */

/* Create a custom checkbox */
.checkbox {
  display: inline-block;
  position: relative;
  cursor: pointer;
  vertical-align: top;
}

.checkbox .checkmark {
  display: flow-root;
  padding: 25px;
  border-radius: 10px;
  background-color: #9b9b9b;
  transition: var(--Transition);
}

/* On mouse-over, add a grey background color */
.checkbox:hover input~.checkmark {
  background-color: rgb(204 204 204 / 23%);
  transition: var(--Transition);
}

/* When the checkbox is checked, add a blue background */
.checkbox input:checked~.checkmark {
  background: var(--grdChoose);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox input:checked+.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox .checkmark:after {
  content: "";
  width: 65%;
  height: 65%;
  background-image: url(../Icons/tick.png);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: var(--Transition);
}

/* for caracter */

.checkbox .checkmark.btn {
  margin: unset;
  padding: 24px;
}

/* endCheckmarkSTyle */

/* showMessage */

/* The snackbar - position it at the bottom and in the middle of the screen */
.alertBox {
  visibility: hidden;
  min-width: 250px;
  margin-left: -125px;
  background-color: #333;
  color: #fff;
  text-align: center;
  border-radius: 2px;
  padding: 10px 16px;
  position: fixed;
  z-index: 150;
  right: 30px;
  bottom: 30px;
  border-radius: 10px;
  border: 1px solid var(--border);
  font-family: var(--txtFont);
}

/* Show the snackbar when clicking on a button (class added with JavaScript) */
.alertBox.active {
  visibility: visible;
  /* Show the snackbar */
  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
  animation: fadein 0.5s, fadeout 0.5s 2.5s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
  from {
    bottom: 0;
    opacity: 0;
  }

  to {
    bottom: 30px;
    opacity: 1;
  }
}

@keyframes fadein {
  from {
    bottom: 0;
    opacity: 0;
  }

  to {
    bottom: 30px;
    opacity: 1;
  }
}

@-webkit-keyframes fadeout {
  from {
    bottom: 30px;
    opacity: 1;
  }

  to {
    bottom: 0;
    opacity: 0;
  }
}

@keyframes fadeout {
  from {
    bottom: 30px;
    opacity: 1;
  }

  to {
    bottom: 0;
    opacity: 0;
  }
}

.alertBox title {
  display: flow-root;
  text-align: center;
  border-bottom: 1px solid;
  margin: 12px 0;
}

.alertBox p {
  display: flow-root;
  margin: 21px;
}

.alertBox .closeBtn {
  display: flow-root;
  position: absolute;
  right: 0;
  top: -6px;
}

.alertBox .closeBtn icon {
  -webkit-mask-size: 15px;
}

.alertBox[msg="error"] {
  background-color: #d64141;
}

.alertBox[msg="success"] {
  background: var(--grdSelect);
}

/* endShowMessage */
backWard,
.modal {
  display: flow-root;
  width: 100%;
  height: 100%;
  background-color: #0000009e;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 200;
}

.modal {
  display: none;
}

backWard parent {
  display: inline-block;
  background: linear-gradient(180deg,
      rgb(212 212 212) 0%,
      rgb(159 159 159) 100%);
  padding: 0 15px 15px;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  min-width: 400px;
  min-height: 170px;
  border-radius: 20px;
}

backWard m-header .closeModal {
  position: absolute;
  top: -20px;
  right: 0;
}

backWard m-header .closeModal icon {
  width: 25px;
  height: 25px;
}

backWard m-header .closeModal icon {
  -webkit-mask-size: 17px;
}

backWard m-content>div {
  display: none !important;
}

backWard m-content {
  display: flow-root;
  background-color: var(--backgroundDefault);
  font-family: var(--txtFont);
  height: 100%;
  border-radius: 15px;
}

backWard m-content .question {
  display: flow-root;
  color: var(--secondText);
  font-size: 15pt;
  margin: 22px auto 30px;
  text-align: center;
}

backWard m-content div.active {
  display: flow-root !important;
}

backWard.active {
  display: flow-root;
  transition: var(--Transition);
}

/* color */

.warning {
  color: var(--Warning);
}

.cityTitle {
  color: var(--thirdText);
  font-size: 23pt;
}

.mafiaTitle {
  color: var(--Warning);
  font-size: 23pt;
}

.btn.mafia {
  background-color: var(--Warning);
}

.btn:is(.mafia, .city) {
  font-size: 18pt;
  font-family: var(--txtFont);
  padding: 8px 16px 6px;
}

.btn.city {
  background-color: var(--thirdText);
}

.btn.warning {
  background-color: var(--Warning);
}

aboutCard .box .mafia {
  background-color: var(--Warning);
}

aboutCard .box .city {
  background-color: #338bff;
}

.mafia {
  background: var(--grdDie);
}

.city {
  background: var(--grdCity);
}

.accept {
  background: var(--grdAccept);
}

.success {
  background: var(--grdSecondAccept);
}

.selected {
  background: var(--grdSecondAccept);
}

.pending {
  background-color: var(--pending);
}

/* .agreeColor {
  background: var(--grdSelect);
} */

.refuseColor {
  background: var(--grdUnselect);
}

.card.disabled {
  filter: grayscale(1);
  cursor: not-allowed;
}

/* End Color */

/* Condiotion */

/* .bgDisabled::after {
  content: "";
  display: flow-root;
  width: 100%;
  height: 100%;
  position: absolute;
  background: #7a7a7a7d;
  top: 0;
  z-index: 100;
  left: 0;
} */

/* .Disabled {
  background-color: #7a7a7a !important;
} */

.titleDisabled {
  color: #7a7a7a;
}

.mafiaDie::before,
.mafiaDie::after {
  content: "";
  display: flow-root;
  width: 52%;
  height: 100%;
  background-image: url(../images/Die.png);
  background-repeat: no-repeat;
  background-size: contain;
  position: absolute;
  top: -11px;
  left: 0;
  z-index: 200;
}

/* EndCondition */

/* Icon */
.btn {
  display: flow-root;
  float: left;
  text-align: center;
  border-radius: 11px;
  overflow: hidden;
  font-family: var(--titleFont);
  cursor: pointer;
  border: 1px solid var(--border);
  padding: 0px 24px 6px;
  font-size: 24pt;
  margin: 0 16px 0 0;
  color: var(--txtDefaultColor);
}

.btn.ico {
  padding: 0 6px 5px;
}

.btn.ico.rigth {
  margin: 0 0 0 16px;
}

icon {
  display: flow-root;
  width: 40px;
  height: 40px;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
  -webkit-mask-size: 22px;
  background-color: var(--backgroundDefault);
  margin: 5px auto 0;
  cursor: pointer;
  float: left;
}

.setting {
  -webkit-mask-image: url(../Icons/setting.png);
}

.paly {
  -webkit-mask-image: url(../Icons/nextPlay.png);
}

.voice {
  -webkit-mask-image: url(../Icons/Voice.png);
}

.tick {
  -webkit-mask-image: url(../Icons/tick.png);
}

.show {
  -webkit-mask-image: url(../Icons/Show.png);
}

.close {
  -webkit-mask-image: url(../Icons/exit.png);
}

.arrow {
  -webkit-mask-image: url(../Icons/next.png);
}

.add {
  -webkit-mask-image: url(../Icons/pluse.png);
}

.agree {
  -webkit-mask-image: url(../Icons/tick.png);
}

.disAgree {
  -webkit-mask-image: url(../Icons/recycle.png);
}

.moon {
  -webkit-mask-image: url(../Icons/Moon.png);
}

.pause {
  -webkit-mask-image: url(../Icons/pause.png);
}

/* EndIcon */

.conatiner {
  display: flow-root;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
}

page {
  display: none;
}

page[active="true"] {
  display: flow-root;
}

/* Card */

.caracter {
  display: inline-block;
  width: 100%;
  height: 100%;
  padding: 0 8px 0;
  border-radius: 10px;
  overflow: hidden;
  border: 1px solid var(--border);
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
}

.caracter::before {
  content: "";
  display: flow-root;
  width: 100%;
  height: 200px;
  background: linear-gradient(180deg,
      rgba(15, 155, 161, 0) 0%,
      rgb(0 0 0 / 13%) 100%);
  position: absolute;
  bottom: 0px;
  left: 0px;
  border-radius: 0 0 10px 10px;
  scale: 0.95;
}

.shield {
  display: flow-root;
  width: 100%;
  position: relative;
  margin: 0 auto;
  height: 96%;
}

.gamePlay .caracter,
.gamePlay2 .caracter {
  height: calc(100% - 23px);
}

.item[disabled] {
  pointer-events: none;
  cursor: not-allowed;
}

/* image */

.shield::before {
  content: "";
  display: flow-root;
  width: 100%;
  height: 98%;
  -webkit-mask-image: url(../images/shield.png);
  -webkit-mask-size: 100% 100%;
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-position: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin-top: 2%;
}

.mafia .shield::before {
  background: var(--grdSecondWarning);
}

.city .shield::before {
  background: var(--grdHardBlue);
}

.unknow .shield::before,
.disabled .shield::before {
  background: #00000069;
}

.DcBeat::after {
  content: "";
  display: flow-root;
  width: 120px;
  height: 100px;
  position: absolute;
  background-image: url(../images/CityGroups/DcBeat.png);
  background-size: 109px;
  background-repeat: no-repeat;
  top: 64%;
  left: 54%;
  transform: translate(-50%, -50%);
}

.shield div {
  display: flow-root;
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
  margin: 0 auto;
}



.shield div::before {
  content: "";
  display: flow-root;
  width: 100%;
  height: 98%;
  -webkit-mask-image: url(../images/MafiaGroups/shadowShiled.png);
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-size: 92% 100%;
  background: linear-gradient(180deg,
      rgba(15, 155, 161, 0) 26%,
      rgba(0, 0, 0, 0.378396) 97%);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-mask-position: center;
}

/* EndImage */

.nameBox {
  display: flow-root;
  width: 100%;
  height: 24px;
  text-align: center;
  box-sizing: border-box;
  background-color: #ffff;
  border-radius: 5px;
  position: relative;
  overflow: hidden;
  z-index: 10;
  margin: -12px 0 0;
}

.nameBox::before {
  content: "";
  display: flow-root;
  width: 100%;
  height: 20px;
  background: linear-gradient(180deg,
      rgba(15, 155, 161, 0) 0%,
      rgba(0, 0, 0, 0.578396) 166%);
  position: absolute;
  bottom: 0;
}

.title {
  display: flow-root;
  font-family: var(--titleFont);
  font-size: 14pt;
  text-align: center;
  white-space: nowrap;
  overflow: hidden;
  position: absolute;
  bottom: 8px;
  left: 50%;
  width: 90%;
  translate: -50% 0;
}

/* endImage */

/* SmallCard */

.smallCard {
  display: inline-block;
  width: 100%;
  position: relative;
  border: 1px solid var(--border);
  border-radius: 10px;
}

.ImageParent {
  display: inline-block;
  width: 100%;
  height: 87px;
  position: relative;
}

.ImageParent .mafia img,
.ImageParent .city img {
  object-fit: cover;
  object-position: center top;
  width: 84%;
}

.ImageParent.ligthShadow::before {
  top: -5px;
}

.ligthShadow {
  position: relative;
}

.ligthShadow::after {
  content: "";
  display: flow-root;
  width: calc(100% - 10px);
  height: 35px;
  background: var(--ligthShadow);
  position: absolute;
  top: 4px;
  left: 50%;
  border-radius: 6px;
  z-index: 0;
  opacity: 0.5;
  translate: -50%;
}

.ligthShadow::before {
  content: "";
  display: flow-root;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  position: absolute;
  background: var(--ligthShadow);
  left: 1px;
  z-index: 90;
  top: 0px;
  opacity: 0.65;
}

.gameOver::before {
  content: "";
  display: flow-root;
  width: 100%;
  height: 100%;
  background-image: url(../images/MafiaGroups/Delete.png);
  background-position: center;
  background-repeat: no-repeat;
  background-size: 50px;
  position: absolute;
  transform: translate(-50%, -50%);
  top: 40%;
  left: 50%;
  z-index: 100;
  mix-blend-mode: color-dodge;
}

/*End SmallCard */

.panelSetting {
  display: inline-block;
  position: absolute;
  bottom: 145px;
  left: 45px;
  border-radius: 12px;
  cursor: pointer;
}

.panelSetting .btn {
  background: var(--grdLightPurpule);
  border: 1px solid #545454;
}

.start,
.exit {
  display: inline-block;
  position: relative;
  cursor: pointer;
}

.panelEvent .btn {
  color: var(--backgroundDefault);
}

.btn.danger {
  background: var(--grdUnselect);
}

.btn.success {
  background: var(--grdSelect);
}

.card.select {
  background: var(--grdSecondAccept);
}

.panelEvent {
  display: flow-root;
  margin: 8px 0 0;
}

.panelEvent.welcomePage {
  position: absolute;
  bottom: 30px;
}

.chooseCaracter {
  display: flow-root;
  width: 100%;
  margin: 25px auto 0;
  padding: 0px 20px 20px;
  border-radius: 20px;
  background: linear-gradient(180deg,
      rgb(212 212 212) 0%,
      rgb(159 159 159) 100%);
  border: 1px solid var(--secondText);
  box-sizing: border-box;
  height: calc(100% - 110px);
}

.chooseCaracter .headTitle {
  width: 100%;
  margin: 8px 0px;
  position: relative;
}

.chooseCaracter .headTitle.ligthShadow::after {
  background: var(--grdShadowText);
  scale: 1;
  border-radius: 12px;
}

.chooseCaracter .headTitle.ligthShadow::before {
  background: unset;
}

:is(.chooseCaracter .title) :is(h1, h2) {
  display: inline-block;
  font-size: 24pt;
}

.chooseCaracter .headTitle h2 {
  color: var(--fourthText);
}

.chooseCaracter section {
  display: flow-root;
  background-color: var(--backgroundDefault);
  padding: 10px;
  border-radius: 15px;
  box-sizing: border-box;
  height: calc(100% - 64px);
  position: relative;
}

.chooseCaracter aboutCard {
  display: inline-block;
  width: 280px;
  float: right;
  text-align: center;
  height: 100%;
  background: var(--grdLigthGray);
  border-radius: 15px;
  position: relative;
}

.chooseCaracter ability.mafia .info span {
  background: var(--Warning);
}

.chooseCaracter ability.mafia .box .nameCharacter {
  color: var(--Warning);
}

.chooseCaracter ability.city .info span {
  background: #338bff;
}

.chooseCaracter ability.city .box .nameCharacter {
  color: #338bff;
}

.chooseCaracter ability.default .box .nameCharacter {
  color: #FF33C2;
}

.chooseCaracter ability.default .info {
  display: none;
}



.chooseCaracter ability .box .nameCharacter {
  font-size: 23pt;
}

.chooseCaracter aboutCard .ligthShadow::after {
  height: 60%;
  scale: 0.93;
}

.chooseCaracter aboutCard .imageParent {
  display: inline-block;
  width: 160px;
  margin-top: 30px;
  height: 210px;
}

.chooseCaracter aboutCard .box {
  display: flow-root;
  width: 100%;
  text-align: right;
  padding: 0 8px;
  box-sizing: border-box;
}

.chooseCaracter aboutCard .box div {
  display: flex;
  gap: 5px;
  float: left;
  margin-top: 12px;
}

.chooseCaracter aboutCard .box div span {
  display: flex;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  color: var(--backgroundDefault);
  font-size: 13pt;
  font-family: var(--txtFont);
  justify-content: center;
  align-items: flex-end;
}

.chooseCaracter aboutCard .box div span a {
  display: flow-root;
  margin-top: 4px;
}

.chooseCaracter aboutCard .box div span.nigth {
  background-image: url(../Icons/Night.png);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 15px;
}

.chooseCaracter aboutCard .description {
  display: flow-root;
  font-family: var(--txtFont);
  text-align: right;
  padding: 8px;
  font-size: 11pt;
  line-height: 22pt;
  overflow: hidden;
}

.box name span {
  font-family: var(--titleFont);
}

.box name .warning {
  font-size: 27pt;
}

.smallCharacter {
  display: flow-root;
  width: calc(100% - 50px);
  padding: 12px 0 0 25px;
  overflow-x: scroll;

}

.mainCharacter {
  display: flow-root;
  width: calc(100% - 50px);
  height: calc(100% - 50px);
  padding: 25px 0 0 22px;
  margin-top: 20px;
  overflow-y: scroll;
}

interduce {
  display: flow-root;
  height: calc(100% - 160px);
  margin-left: 10px;
}

.smallCharacter.ligthShadow::after {
  width: calc(100% - 20px);
  height: 55px;
  scale: 1;
  background: var(--grdLigthGray);
  border-radius: 12px;
}

interduce .smallCharacter .parent {
  display: inline-block;
  width: 84px;
  height: 115px;
  border-radius: 11px;
  border: 1px solid var(--border);
  cursor: pointer;
  text-align: center;
  font-family: var(--titleFont);
  overflow: hidden;
  position: relative;
  margin: 0 10px 10px 0;
}

interduce .smallCharacter .parent span.ligthShadow {
  display: flow-root;
  padding: 0 0px;
  color: var(--secondText);
  font-family: "Vazir";
  font-size: 10pt;
}

interduce .smallCharacter .parent span.ligthShadow::after {
  scale: 0.95;
  top: 3px;
  height: 30px;
  background: var(--grdLigthGray);
}

interduce .mainCharacter.ligthShadow::after {
  width: 100%;
  height: 100px;
  scale: 1;
  background: var(--grdLigthGray);
  border-radius: 12px;
}

interduce .smallCharacter .miniTitle {
  display: flow-root;
  width: 100%;
  position: absolute;
  bottom: 0;
  color: var(--backgroundDefault);
}

.smallCard .miniTitle.mafia {
  background-color: var(--Warning);
}

.smallCard .miniTitle.city {
  background-color: #338bff;
}

.left {
  float: left;
}

.rigth {
  float: right;
}

.btn.prev icon {
  transform: rotate(180deg);
}

/* addPlayer */

.managePlayer {
  display: flow-root;
  width: calc(100% - 340px);
  float: right;
  height: 100%;
  overflow: auto;
}

.inputBox {
  display: flow-root;
  width: 100%;
}

.managePlayer .parent {
  display: flow-root;
  text-align: right;
  margin-bottom: 8px;
}

.managePlayer .addPlayer input {
  background: #e6e6e65c;
}

.managePlayer .addPlayer .ligthShadow::after {
  height: 25px;
}

.managePlayer .addPlayer .btn {
  background: var(--grdSelect);
}

.addPlayer .inputBox {
  width: calc(100% - 64px);
  float: right;
}

.addPlayer .btn {
  margin-right: 8px;
}

.inputBox.ligthShadow::after {
  background: linear-gradient(180deg,
      rgb(216 216 216 / 42%) 0%,
      rgb(229 229 229 / 0%) 100%);
}

.playerCondition .btn {
  margin-right: 8px;
}

.playerCondition {
  display: flow-root;
  border: 1px solid var(--border);
  border-radius: 8px;
  justify-content: space-between;
  padding: 10px;
  gap: 5px;
  margin-bottom: 12px;
}

.playerCondition .inputBox {
  width: calc(100% - 118px);
  border: unset;
}

:is(.playerCondition) :is(agree, remove) {
  position: relative;
}

.conductor {
  width: 340px;
  position: relative;
  height: 100%;
}

.conductorBox {
  display: flow-root;
  width: 164px;
  height: 216px;
  position: absolute;
  bottom: -26px;
  left: 50%;
  translate: -50% 0;
}

.headTitleConductor {
  display: flow-root;
  height: 200px;
  background-image: url(../Icons/interduc.png);
  background-repeat: no-repeat;
  background-position: center;
  background-size: 292px;
  transform: rotate(2deg);
  margin-top: 16px;
}

.headTitleConductor .txtBox {
  display: flow-root;
  width: 90%;
  transform: rotate(2deg);
  font-family: var(--txtFont);
  text-align: right;
  font-size: 9pt;
  margin: 10px auto 0;
  position: relative;
}

.headTitleConductor .txtBox.ligthShadow::after {
  background: linear-gradient(0deg,
      rgb(137 137 137 / 12%) 0%,
      rgb(215 215 215 / 0%) 208%);
  height: 90px;
  width: calc(100% - 72px);
  top: 8px;
}

.headTitleConductor p {
  display: block;
  margin: 0 18px;
  text-align: center;
  color: var(--secondText);
  line-height: 19pt;
  font-size: 11pt;
}

.headTitleConductor .boxTitle {
  display: flow-root;
  margin: 8px;
  font-family: var(--txtFont);
  color: var(--secondText);
  font-size: 12pt;
  font-weight: bold;
}

.headTitleConductor .boxTitle span:first-child {
  margin: 0 12px 0 0;
}

.friend {
  color: var(--fourthText);
}

.card {
  display: inline-block;
  width: 125px;
  height: 193px;
  text-align: center;
  background-color: var(--txtDefaultColor);
  border: 1px solid var(--border);
  border-radius: 10px;
  overflow: hidden;
  position: relative;
  margin: 0 10px 10px 0;
}

/* nigthCaracyer */

.nightCard {
  display: flow-root;
  width: calc(100% - 100px);
  height: calc(100% - 90px);
  /* display: inline-grid;
  grid-template-columns: repeat(4, 1fr); */
  grid-gap: 15px;
  margin: 20px auto 0;
  overflow-y: scroll;
}

.unknow {
  filter: grayscale(1);
}

.unknow img {
  width: 50%;
}

.cardTitle {
  display: flow-root;
  text-align: center;
  font-family: var(--txtFont);
  color: var(--secondText);
}

.cardTitle.ligthShadow::after {
  background: var(--grdLigthGray);
  opacity: 0.4;
}

.cardTitle.ligthShadow::before {
  display: none;
}

.nightCard .item {
  display: inline-block;
}



.conductor .aboutPlay {
  display: flow-root;
  width: 100%;
  background-image: url(../Icons/interduc.png);
  background-repeat: no-repeat;
  background-position: right;
  background-size: contain;
  float: right;
  height: 230px;
  margin: -200px 80px 0 0;
}

.conductor .aboutPlay parent {
  display: flow-root;
  width: calc(100% - 50px);
  transform: rotate(4deg);
  font-family: var(--txtFont);
  font-size: 12pt;
  float: right;
  line-height: 1.7;
  margin: 16px 20px 0 0;
}

.conductor .aboutPlay .txtTitle {
  display: flow-root;
  text-align: right;
}

.conductor .aboutPlay p {
  display: flow-root;
  color: var(--secondText);
  text-align: right;
}

.conductor .ligthShadow::after {
  background: linear-gradient(0deg,
      rgb(137 137 137 / 12%) 0%,
      rgb(215 215 215 / 0%) 208%);
  height: 140px;
}

.arrowBtn .man {
  display: flow-root;
  width: 210px;
  background-image: url(../images/conductor.png);
  background-repeat: no-repeat;
  background-size: 200px;
  background-position: center;
  height: 270px;
  float: right;
  margin: -200px 0 0 28px;
}

.arrowBtn a.btn {
  z-index: 100;
}

.backWardTitle.ligthShadow::after {
  scale: 1;
  z-index: -1;
  background: var(--grdShadowText);
}

.backWardTitle.ligthShadow::before {
  display: none;
}

.backWardTitle {
  display: flow-root;
  font-family: var(--titleFont);
  text-align: center;
}

.backWardTitle span {
  font-size: 23pt;
  margin-bottom: 7px;
}

.election {
  display: flow-root;
  text-align: center;
  width: 100%;
}

.election a.btn {
  display: inline-block;
  float: unset;
  font-size: 13pt;
}

.timer {
  display: flow-root;
  text-align: center;
  margin-top: 15px;
  position: relative;
}

.timer a.Time {
  margin: 0 auto;
  float: unset;
  padding: 20px;
  width: max-content;
}

.timer a.Time .counter {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -38%);
  font-size: 13pt;
  color: var(--secondText);
  font-family: var(--txtFont);
}

.timer a.btn icon {
  width: 55px;
  height: 55px;
  -webkit-mask-size: 53px;
}

.timer a.stop {
  background: linear-gradient(360deg,
      rgba(255, 150, 51, 1) 0%,
      rgba(255, 51, 51, 1) 100%);
  font-size: 11pt;
  width: max-content;
  margin: 12px auto 30px;
  float: unset;
  font-family: var(--txtFont);
  padding-top: 6px;
}

.timer .Time.play {
  background: var(--grdSelect);
}

.timer .Time.pauseGame {
  background: linear-gradient(360deg,
      rgba(255, 51, 180, 1) 0%,
      rgba(255, 51, 51, 1) 100%);
}

.timer .Time.pauseGame .counter {
  color: var(--txtDefaultColor);
}

.kick .titleKick {
  display: flow-root;
  text-align: center;
  font-size: 19pt;
  color: var(--Warning);
  margin-top: 10px;
}

:is(.kick) :is(h2, h3, p) {
  text-align: center;
  color: var(--secondText);
}

.kick h3 {
  font-size: 9pt;
}

.kick div {
  display: flow-root;
  width: calc(100% - 100px);
  margin: 10px auto 30px;
  line-height: 1.7;
}

.kick div h2 {
  font-size: 14pt;
}

/* ChooseCaracter */

.choosesCaracter {
  display: flow-root;
  margin-top: 30px;
  height: calc(100% - 108px);
}

.choosesCaracter .unknow .selectedCaracter {
  width: 100%;
}

.choosesCaracter .person {
  display: inline-block;
  vertical-align: top;
  width: calc(25% - 30px);
  height: 100%;
  overflow: auto;
}

.choosesCaracter .cards {
  display: inline-grid;
  width: calc(80% - 50px);
  grid-template-columns: repeat(4, 1fr);
  gap: 12px 0;
  height: 100%;
  overflow: auto;
}

.choosesCaracter .item {
  position: relative;
}

.caracterPersonName {
  display: flow-root;
  width: 100%;
  padding: 10px 15px;
  text-align: right;
  border-radius: 14px;
  font-size: 15pt;
  margin-bottom: 15px;
  color: var(--backgroundDefault);
  font-family: var(--txtFont);
  vertical-align: sub;
}

.caracterPersonName.ligthShadow::after {
  top: 4px;
  height: 35px;
  border-radius: 11px;
}

.caracterPersonName .personName {
  font-size: 10pt;
}

.person .btn span {
  display: flow-root;
  float: right;
  margin-top: 8px;
  font-size: 16pt;
}

.btn.disable {
  background: #9b9b9b;
}

.person .caracterPersonName show {
  float: left;
}

.person .caracterPersonName .show::after {
  margin-top: 2px;
}

.person .btn {
  float: unset;
  margin: 0 0 8px 0;
}

.cancle .btn span {
  display: flow-root;
  margin-top: 5px;
  color: var(--backgroundDefault);
}

.nightBtns .caracterPersonName {
  display: inline-block;
  width: max-content;
  padding: 7px 15px;
}

.nightBtns .caracterPersonName span {
  font-size: 11pt;
}

.nightBtns div {
  margin-left: 5px;
}